import React, { useState } from 'react';
import { View, Text, TextInput, Button, Alert } from 'react-native';
import { useNavigation } from '@react-navigation/native';
import axios from 'axios';
import * as SecureStore from 'expo-secure-store';

const SignInScreen = () => {
  const [nationalId, setNationalId] = useState('');
  const [password, setPassword] = useState('');
  const navigation = useNavigation();

  const handleLogin = async () => {
    if (!nationalId || !password) {
      Alert.alert('Error', '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô');
      return;
    }

    try {
      // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ API Login
      const response = await axios.post('http://192.168.1.24:5062/Tokens', {
        nationalId,
        password
      });

      // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Token ‡∏•‡∏á‡πÉ‡∏ô Secure Storage
      await SecureStore.setItemAsync('userToken', response.data.token);
      
      navigation.navigate('MainDrawer');

    } catch (error) {
      let errorMessage = '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠';
      
      // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Error ‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ï‡πà‡∏≤‡∏á‡πÜ
      if (error.response) {
        errorMessage = error.response.data?.message || '‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à';
      } else if (error.request) {
        errorMessage = '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ';
        console.log('üì° No response received. Request was:', error.request);
      }
      
      Alert.alert('‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î', errorMessage);
    }
  };

  return (
    <View style={{ padding: 20 }}>
      <Text style={{ fontSize: 24, marginBottom: 20 }}>‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</Text>

      <TextInput
        placeholder="‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô"
        value={nationalId}
        onChangeText={setNationalId}
        style={{ 
          borderWidth: 1, 
          padding: 10, 
          marginBottom: 10,
          borderRadius: 5
        }}
      />

      <TextInput
        placeholder="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô"
        value={password}
        onChangeText={setPassword}
        secureTextEntry
        style={{ 
          borderWidth: 1, 
          padding: 10, 
          marginBottom: 10,
          borderRadius: 5
        }}
      />

      <Button
        title="‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö"
        onPress={handleLogin}
        color="#007bff"
      />

      <Text style={{ marginTop: 20 }}>
        ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ?{' '}
        <Text
          style={{ color: '#007bff', fontWeight: 'bold' }}
          onPress={() => navigation.navigate('MainDrawer')}
        >
          ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
        </Text>
      </Text>
    </View>
  );
};

export default SignInScreen;